---
- name: Sorting credentials
  hosts: localhost
  become: no

  tasks:
    - block:
        - sts_assume_role:
            role_arn: "{{ initial_role }}"
            role_session_name: "{{ initial_role.split('/')[-1] }}"
            region: "{{ deploy_region }}"

        - set_fact:
            aws_credentials:
              access_key: "{{ initial_role_credentials.sts_creds.access_key }}"
              secret_key: "{{ initial_role_credentials.sts_creds.secret_key }}"
              session_token: "{{ initial_role_credentials.sts_creds.session_token }}"
      rescue:
        - set_fact:
            aws_credentials:
              access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
              secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
              session_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"

- hosts: localhost
  become: no

  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_credentials.access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_credentials.secret_key }}"
    AWS_SESSION_TOKEN: "{{ aws_credentials.session_token }}"
    AWS_SECURITY_TOKEN: "{{ aws_credentials.session_token }}"
    AWS_DEFAULT_REGION: "{{ deploy_region }}"

  vars:
    pwd: "{{ lookup('env', 'PWD') }}"
    target_dir: "{{ pwd }}/target"
    layers_dir: "{{ pwd }}/terraform"
    terrabot_vars: "{{ {} }}"
    tf_upgrade: true
    dry_run: false
    backend_reconfigure: true

  pre_tasks:
    - include_tasks: "{{ playbook_dir }}/inc/_clone.yml"
      when:
        - remote_stack_url is defined
        - remote_stack_version is defined

    - import_tasks: "{{ playbook_dir }}/inc/_setup.yml"

  tasks:
    - include_tasks: "{{ playbook_dir }}/inc/_tf_{{ tfaction }}.yml"

  post_tasks:
    - include_tasks: "{{ post_tasks_file }}"
      when: post_tasks_file is defined

    - include_tasks: "{{ playbook_dir }}/inc/_teardown.yml"

    - file:
        path: "{{ terrabot_remote_stack_clone_dir.path }}"
        state: absent
      when:
        - remote_stack_url is defined
        - remote_stack_version is defined