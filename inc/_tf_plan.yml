---
- include_tasks: "{{ playbook_dir }}/inc/_tf_init.yml"

- set_fact:
    plan_command_line: >-
      terraform plan
      {{ var_files_options|join(' ') }}
      -var deploy_env={{ deploy_env }}
      -var deploy_region={{ deploy_region }}
      -var terrabot_all_layers_dir={{ target_all_layers_dir }}
      -state={{ target_layer_dir }}/{{ deploy_env }}.{{ deploy_region }}.tfstate
- debug:
    var: plan_command_line
    verbosity: 1

- name: "{{ tflayer }} - plan"
  shell: >-
    {{ plan_command_line }}
  args:
    chdir: "{{ src_layer_dir }}"
  register: tf_plan_light
  when: initial_role is not defined


- name: "{{ tflayer }} - plan (with initial role assumed)"
  shell: >-
    {{ plan_command_line }}
  args:
    chdir: "{{ src_layer_dir }}"
  register: tf_plan_assumed
  environment:
    AWS_ACCESS_KEY_ID: "{{ initial_role_credentials.sts_creds.access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ initial_role_credentials.sts_creds.secret_key }}"
    AWS_SECURITY_TOKEN: "{{ initial_role_credentials.sts_creds.session_token }}"
  when: initial_role is defined

- set_fact:
    tf_plan: "{{ tf_plan_assumed }}"
  when: initial_role is defined

- set_fact:
    tf_plan: "{{ tf_plan_light }}"
  when: initial_role is not defined


- pause:
    prompt: |-
      {{ tf_plan.stdout }}
      #
      ##
      ###
      #### READ CAREFULLY !!!
      Press 'ENTER' to continue
    register: tf_plan_prompt
  when:
    - not (auto_apply|default(false))
    - not dry_run
