---
- name: Check for mandatory vars
  assert:
    that:
      - vars[item] is defined
      - vars[item] != ''
    msg: "Mandatory variable '{{ item }}' missing"
  with_items:
    - tflayer
    - deploy_env
    - deploy_region
    - tfaction

- name: Search target terraform layer directory
  stat:
    path: "{{ src_layer_dir }}"
  register: src_layer_dir_scan

- name: Assert target terraform layer directory
  assert:
    that:
      - src_layer_dir_scan.stat.exists
      - src_layer_dir_scan.stat.isdir
    msg: "Source layer could not be found: {{ src_layer_dir }}"

- name: Create work directory
  file:
    path: "{{ target_layer_dir }}"
    state: directory

- name: Search var files
  stat:
    path: "{{ item }}"
  register: taco_vars_scan
  with_items:
    - "{{ layers_dir }}/all-layers.taco.yml"
    - "{{ layers_dir }}/{{ tflayer }}/all-env.all-region.taco.yml"
    - "{{ layers_dir }}/{{ tflayer }}/all-env.{{ deploy_region }}.taco.yml"
    - "{{ layers_dir }}/{{ tflayer }}/{{ deploy_env }}.all-region.taco.yml"
    - "{{ layers_dir }}/{{ tflayer }}/{{ deploy_env }}.{{ deploy_region }}.taco.yml"

- name: Search var files
  set_fact:
    tfvars_addons: >-
      {{
        taco_vars_scan.results
        |selectattr('stat.exists')
        |map(attribute='stat.path')
        |list
      }}

- name: Load var files
  include_vars: "{{ item }}"
  with_items: "{{ tfvars_addons }}"

- name: Get useful vars list
  block:
    - name: Get useful vars list
      command: >-
        grep variable *.tf
      args:
        chdir: "{{ src_layer_dir }}"
      register: claimed_vars_sh

    - name: Get useful vars list
      set_fact:
        claimed_vars: >-
          {{
            claimed_vars|default([])
            + [item | regex_replace('^.*?"(.*?)".*$', '\1')]
          }}
      loop: "{{ claimed_vars_sh.stdout_lines }}"

  rescue:
    - name: Layer has no variables
      set_fact:
        claimed_vars: []

- name: Template terraform var file
  copy:
    dest: "{{ target_layer_dir }}/taco.tfvars.j2"
    content:
      {% set comma = joiner(",") %}
      {
      {% for varclaim in claimed_vars %}
      {% if vars[varclaim] is defined %}
        {{ comma() }}"{{ varclaim }}": {%raw%}{{{%endraw%} {{varclaim}}|to_nice_json {%raw%}}}{%endraw%}
      {% endif %}
      {% endfor %}
      }

- name: Render terraform var file
  template:
    src: "{{ target_layer_dir }}/taco.tfvars.j2"
    dest: "{{ target_layer_dir }}/taco.tfvars.json"
