---
- name: Sorting credentials
  hosts: localhost
  become: no

  tasks:
    - block:
        - name: try to assume a role before starting terraform work
          sts_assume_role:
            role_arn: "{{ initial_role }}"
            role_session_name: "{{ initial_role.split('/')[-1] }}"
            region: "{{ deploy_region }}"
          register: initial_assume_role

        - name: role assumed, picking vars to feed terraform env vars
          set_fact:
            aws_credentials:
              access_key: "{{ initial_assume_role.sts_creds.access_key }}"
              secret_key: "{{ initial_assume_role.sts_creds.secret_key }}"
              session_token: "{{ initial_assume_role.sts_creds.session_token }}"
      rescue:
        - name: fallback on using AWS env vars
          set_fact:
            aws_credentials:
              access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
              secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
              session_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"

- name: Terrabot wakes up
  hosts: localhost
  become: no

  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_credentials.access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_credentials.secret_key }}"
    AWS_SESSION_TOKEN: "{{ aws_credentials.session_token }}"
    AWS_SECURITY_TOKEN: "{{ aws_credentials.session_token }}"
    AWS_DEFAULT_REGION: "{{ deploy_region }}"

  vars:
    pwd: "{{ lookup('env', 'PWD') }}"
    target_dir: "{{ pwd }}/target"
    layers_dir: "{{ pwd }}/terraform"
    tf_upgrade: true
    dry_run: false
    backend_reconfigure: true

  pre_tasks:
    - name: Clone remote stack
      include_tasks: "{{ playbook_dir }}/inc/_clone.yml"
      when:
        - remote_stack_url is defined
        - remote_stack_version is defined

    - import_tasks: "{{ playbook_dir }}/inc/_setup.yml"

  tasks:
    - import_tasks: "{{ playbook_dir }}/inc/_tf_{{ tfaction }}.yml"

  post_tasks:

    - name: Clean remote stack
      file:
        path: "{{ taco_remote_stack_clone_dir.path }}"
        state: absent
      when:
        - remote_stack_url is defined
        - remote_stack_version is defined

    - name: TerraBot has finished.
      debug:
        msg:
          - "SRC_LAYER={{ src_layer_dir }}"
          - "TARGET_LAYER={{ target_layer_dir }}"
